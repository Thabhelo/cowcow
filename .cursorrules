# Cowcow Development Rules

## Code Style
- Rust: Follow rustfmt defaults, clippy pedantic
- Dart: Follow Flutter style guide, use dart format
- Python: Black + isort, max line length 88
- Markdown: 80 chars, use MDX for diagrams

## Architecture
- Keep core audio processing in Rust
- FFI boundaries must be well-documented
- Mobile UI must work offline-first
- All network calls must be resumable

## Testing
- Unit tests required for all Rust code
- Integration tests for FFI boundaries
- Widget tests for Flutter UI
- Property-based tests for audio QC

## Documentation
- All public APIs must have doc comments
- Architecture decisions in docs/decisions/
- Keep diagrams in docs/img/ up to date
- Update CHANGELOG.md for all changes

## Security
- No secrets in code or configs
- Use secure storage for tokens
- Validate all FFI inputs
- TLS 1.3 for all network

## Performance
- Audio processing < 200ms
- Battery impact < 4%/10min
- Storage < 160kB/10s clip
- Offline-first by default 