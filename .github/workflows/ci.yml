name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  rust:
    name: Rust
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev pkg-config
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Check formatting
        run: cargo fmt -- --check
      
      - name: Clippy
        run: cargo clippy -- -D warnings
        env:
          SQLX_OFFLINE: true
      
      - name: Run tests
        run: cargo test --all
        env:
          SQLX_OFFLINE: true
      
      - name: Build
        run: cargo build --all --release
        env:
          SQLX_OFFLINE: true

  python:
    name: Python Server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r server/requirements.txt
      
      - name: Check syntax
        run: |
          cd server
          python -m py_compile *.py
      
      - name: Run basic import test
        run: |
          cd server
          python -c "import main; print('Server imports successfully')"

  scripts:
    name: Automation Scripts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Test script syntax
        run: |
          bash -n scripts/build.sh
          bash -n scripts/test.sh
      
      - name: Check script permissions
        run: |
          test -x scripts/build.sh
          test -x scripts/test.sh
      
      - name: Validate project structure
        run: |
          test -f Cargo.toml
          test -f README.md
          test -f .gitignore
          test -d docs
          test -d cowcow_cli
          test -d cowcow_core
          test -d server 